@{
	ViewBag.Title = "Dashboard";
}

@section scripts{
	<script>


		$(function () {

			var messageFrequency = 10;
			var timeout = 1000 / messageFrequency;
			var moved = true;

			var _submit = document.getElementById('_submit'),
			_file = document.getElementById('_file'),
			_progress = document.getElementById('_progress');

			// Declare a proxy to reference the hub.
			var photoAppSignalR = $.connection.photoAppHub;
			var connPromise = $.connection.hub.start();

			// Create a function that the hub can call to broadcast messages.
			photoAppSignalR.client.broadcastMessage = function (imageFile, respId) {

				$("<div>", {
					id: respId,
					"class": "photoRespContainer"

				}).html(displayImage(imageFile, respId)).draggable().appendTo("#playground");


			};



			// Create a function that the hub can call to broadcast messages.
			photoAppSignalR.client.updateLocation = function (model) {

				redrawPosition(model);
			};



			var upload = function () {

				if (_file.files.length === 0) {
					return;
				}

				var data = new FormData();
				data.append('selectedFile', _file.files[0]);

				var request = new XMLHttpRequest();
				request.onreadystatechange = function () {
					if (request.readyState == 4) {
						try {

							var resp = JSON.parse(request.response);
							if (resp != undefined) {
								_progress.style.width = "100%";

								$("<div>", {
									id: resp.Id,
									"class": "photoRespContainer"

								}).html(displayImage(resp.Base64, resp.Id)).draggable().appendTo("#playground");

								// Start the connection.
								connPromise.done(function () {

									// Call the Send method on the hub server.
									photoAppSignalR.server.send(resp.Base64, resp.Id);

								});



							}
						} catch (e) {
							var resp = {
								status: 'error',
								data: 'Unknown error occurred: [' + request.responseText + ']'
							};
						}

					}
				};

				request.upload.addEventListener('progress', function (e) {
					_progress.style.width = Math.ceil(e.loaded / e.total) * 100 + '%';
				}, false);


				request.open('POST', "@Url.Action("SaveImage", "PictureUpload")");
				request.send(data);


			}

			_submit.addEventListener('click', upload);

			var displayImage = function (base64Data, unqId) {

				var image = $("<img>", {
					src: "data:image/jpg;base64," + base64Data

				});

				return $("<div>", {
					id: unqId,
					"class": "imageHolder"

				}).html(image);
			};

			$("body").on("drag", ".photoRespContainer", function () {
				moved = true;
				var _this = $(this);
				// Start the connection.
				connPromise.done(function () {

					var model = {
						id: _this.attr("id"),
						left: _this.css('left'),
						top: _this.css('top')

					};

					// Call the Send method on the hub server with timeout.
					setInterval(updatePeersPosition(model), timeout);
				
				});

			
			});

			var redrawPosition = function (model) {
				var updateRate = 1;
				$("#" + model.id).animate({
					left: model.left,
					top : model.top

				}, updateRate,"linear");
				
			};


			function updatePeersPosition(model)
			{
				if (moved) {
					moved = false;
					photoAppSignalR.server.updatePosition(model);
				}
			}

		});

	</script>

}

<style>
	.progress_outer {
	}

	.progress {
		width: 0%;
		background: #3BC10F;
		height: 2px;
	}

	div.photoRespContainer {
		background-color: rgb(243, 243, 243);
		-moz-border-radius: 2px;
		-webkit-border-radius: 2px;
		border-radius: 2px;
		border: 1px solid #ebebeb;
		width: 200px;
		height: 200px;
		overflow: hidden;
		word-wrap: break-word;
		margin: 10px;
		float: left;
	}

	img {
		height: 200px;
		width: 200px;
	}
</style>


<h2>Dashboard</h2>

<div class='container'>
	<p>
		Select File: <input type='file' id='_file'> <input type='button' id='_submit' value='Upload!' name="file">
	</p>
	<div class='progress_outer'>
		<div id='_progress' class='progress'></div>
	</div>

	<div id="playground">

	</div>
</div>
